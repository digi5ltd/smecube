import React from "react";
import { Link } from "react-router";
import { motion } from "framer-motion";

const BusinessTraining = () => {
  const stats = [
    { number: "рзлрзжрзж+", label: "ржЯрзНрж░рзЗржЗржирзНржб ржЙржжрзНржпрзЛржХрзНрждрж╛" },
    { number: "рзпрзл%", label: "рж╕ржлрж▓рждрж╛ рж╣рж╛рж░" },
    { number: "рзйрзж+", label: "рж░рж┐ржпрж╝рзЗрж▓ рж▓рж╛ржЗржн рж╕рзЗрж╢ржи" },
    { number: "рзирзк/рзн", label: "рж╕рж╛ржкрзЛрж░рзНржЯ" },
  ];

  const features = [
    {
      icon: "ЁЯОУ",
      title: "ржкрзНрж░рзНржпрж╛ржХрзНржЯрж┐ржХрзНржпрж╛рж▓ ржЯрзНрж░рзЗржЗржирж┐ржВ",
      description: "рж▓рж╛ржЗржн ржЙржжрж╛рж╣рж░ржгрзЗрж░ ржорж╛ржзрзНржпржорзЗ ржмрж╛рж╕рзНрждржмржнрж┐рждрзНрждрж┐ржХ рж╢рж┐ржХрзНрж╖рж╛ред",
    },
    {
      icon: "ЁЯУИ",
      title: "ржмрж┐ржЬржирзЗрж╕ ржЧрзНрж░рзЛрже рж╕рзНржЯрзНрж░рж╛ржЯрзЗржЬрж┐",
      description: "ржмрж┐ржХрзНрж░ржпрж╝ ржмрзГржжрзНржзрж┐ ржУ ржмрзНрж░рзНржпрж╛ржирзНржб ржЙржирзНржиржпрж╝ржирзЗрж░ ржХрзМрж╢рж▓ рж╢рзЗржЦрж╛ржирзЛ рж╣ржпрж╝ред",
    },
    {
      icon: "ЁЯТ╝",
      title: "рж░рж┐ржпрж╝рзЗрж▓ ржкрзНрж░ржЬрзЗржХрзНржЯ ржУржпрж╝рж╛рж░рзНржХ",
      description: "ржирж┐ржЬрж╕рзНржм ржкрзНрж░ржЬрзЗржХрзНржЯрзЗ ржХрж╛ржЬ ржХрж░рзЗ рж╣рзНржпрж╛ржирзНржбрж╕-ржЕржи ржПржХрзНрж╕ржкрзЗрж░рж┐ржпрж╝рзЗржирзНрж╕ ржирж┐ржиред",
    },
    {
      icon: "ЁЯдЭ",
      title: "ржорзЗржирзНржЯрж░рж╢рж┐ржк рж╕рж╛ржкрзЛрж░рзНржЯ",
      description: "ржЕржнрж┐ржЬрзНржЮ ржорзЗржирзНржЯрж░ржжрзЗрж░ ржорж╛ржзрзНржпржорзЗ ржЧрж╛ржЗржбрж▓рж╛ржЗржи ржУ рж╕рж╣рж╛ржпрж╝рждрж╛ред",
    },
    {
      icon: "ЁЯМР",
      title: "ржбрж┐ржЬрж┐ржЯрж╛рж▓ ржорж╛рж░рзНржХрзЗржЯрж┐ржВ ржмрзЗрж╕рж┐ржХ",
      description: "Facebook Ads, Google Ads, SEO рж╕рж╣ ржбрж┐ржЬрж┐ржЯрж╛рж▓ ржжржХрзНрж╖рждрж╛ ржЕрж░рзНржЬржиред",
    },
    {
      icon: "ЁЯПЖ",
      title: "рж╕рж╛рж░рзНржЯрж┐ржлрж┐ржХрзЗржЯ ржкрзНрж░ржжрж╛ржи",
      description: "ржЯрзНрж░рзЗржЗржирж┐ржВ рж╢рзЗрж╖рзЗ рж╕рж╛рж░рзНржЯрж┐ржлрж┐ржХрзЗржЯ ржкрзНрж░ржжрж╛ржи ржХрж░рж╛ рж╣ржпрж╝ред",
    },
  ];

  const steps = [
    { step: "рзз", title: "рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи", desc: "ржЕржирж▓рж╛ржЗржи ржлрж░рзНржо ржкрзВрж░ржг ржХрж░рзЗ ржпрзЛржЧ ржжрж┐ржиред" },
    {
      step: "рзи",
      title: "рж▓рж╛ржЗржн ржХрзНрж▓рж╛рж╕ рж╢рзБрж░рзБ",
      desc: "ржорзЗржирзНржЯрж░ржжрзЗрж░ рж╕рж╛ржерзЗ рж░рж┐ржпрж╝рзЗрж▓ рж╕рзЗрж╢ржиред",
    },
    { step: "рзй", title: "ржкрзНрж░ржЬрзЗржХрзНржЯ ржПржХрзНрж╕рж┐ржХрж┐ржЙрж╢ржи", desc: "ржмрж╛рж╕рзНрждржм ржкрзНрж░ржЬрзЗржХрзНржЯрзЗ ржХрж╛ржЬред" },
    {
      step: "рзк",
      title: "рж╕рж╛рж░рзНржЯрж┐ржлрж┐ржХрзЗржЯ ржУ рж╕рж╛ржкрзЛрж░рзНржЯ",
      desc: "рж╕ржорзНржкржирзНржи ржХрж░рж╛рж░ ржкрж░ рж╕рж╛рж░рзНржЯрж┐ржлрж┐ржХрзЗржЯред",
    },
  ];

  const packages = [
    {
      name: "ржмрзЗрж╕рж┐ржХ ржЯрзНрж░рзЗржЗржирж┐ржВ",
      price: "рзи,рзжрзжрзж",
      duration: "рзз ржорж╛рж╕",
      features: [
        "ржмрзЗрж╕рж┐ржХ ржмрж┐ржЬржирзЗрж╕ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░",
        "ржбрж┐ржЬрж┐ржЯрж╛рж▓ ржорж╛рж░рзНржХрзЗржЯрж┐ржВ ржзрж╛рж░ржгрж╛",
        "ржкрзНрж░ржЬрзЗржХрзНржЯ ржЕрзНржпрж╛рж╕рж╛ржЗржиржорзЗржирзНржЯ",
        "ржЗржорзЗржЗрж▓ рж╕рж╛ржкрзЛрж░рзНржЯ",
      ],
    },
    {
      name: "ржкрзНрж░рзЛ ржЯрзНрж░рзЗржЗржирж┐ржВ",
      price: "рзл,рзжрзжрзж",
      duration: "рзи ржорж╛рж╕",
      popular: true,
      features: [
        "ржЕрзНржпрж╛ржбржнрж╛ржирзНрж╕ ржорж╛рж░рзНржХрзЗржЯрж┐ржВ ржоржбрж┐ржЙрж▓",
        "рж▓рж╛ржЗржн ржмрж┐ржЬржирзЗрж╕ ржХржирж╕рж╛рж▓рзНржЯрзЗрж╢ржи",
        "ржкрзНрж░ржЬрзЗржХрзНржЯ ржУржпрж╝рж╛рж░рзНржХ ржЧрж╛ржЗржбрзЗржирзНрж╕",
        "рзз-ржЕржи-рзз ржорзЗржирзНржЯрж░ рж╕рзЗрж╢ржи",
        "рзирзк/рзн рж╕рж╛ржкрзЛрж░рзНржЯ",
      ],
    },
    {
      name: "ржПржирзНржЯрж╛рж░ржкрзНрж░рж╛ржЗржЬ ржХрзЛрж░рзНрж╕",
      price: "рззрзж,рзжрзжрзж",
      duration: "рзй ржорж╛рж╕",
      features: [
        "ржХрж╛рж╕рзНржЯржорж╛ржЗржЬржб ржмрж┐ржЬржирзЗрж╕ ржкрзНрж▓рзНржпрж╛ржирж┐ржВ",
        "ржЯрж┐ржо ржорзНржпрж╛ржирзЗржЬржорзЗржирзНржЯ ржЯрзНрж░рзЗржЗржирж┐ржВ",
        "рж░рж┐ржпрж╝рзЗрж▓ ржХрзНрж▓рж╛ржпрж╝рзЗржирзНржЯ ржкрзНрж░ржЬрзЗржХрзНржЯ",
        "ржбрзЗржбрж┐ржХрзЗржЯрзЗржб ржорзЗржирзНржЯрж░рж╢рж┐ржк",
        "рж╕рж╛рж░рзНржЯрж┐ржлрж┐ржХрзЗржЯ ржУ ржкрзНрж░рзЛржорзЛрж╢ржирж╛рж▓ рж╕рж╛ржкрзЛрж░рзНржЯ",
      ],
    },
  ];

  return (
    <div className="min-h-screen mt-5">
      {/* Hero Section */}
      {/* Hero Section */}
      <div className="relative bg-gradient-to-br from-indigo-700 via-blue-600 to-cyan-500 text-white py-28 overflow-hidden">
        {/* Decorative Gradient Glow */}
        <div className="absolute inset-0">
          <div className="absolute -top-32 -left-32 w-80 h-80 bg-indigo-400 rounded-full blur-3xl opacity-20"></div>
          <div className="absolute -bottom-32 -right-32 w-80 h-80 bg-cyan-400 rounded-full blur-3xl opacity-20"></div>
        </div>

        <div className="relative max-w-6xl mx-auto px-6 text-center">
          <motion.h1
            initial={{ y: -50, opacity: 0 }}
            animate={{ y: 0, opacity: 1 }}
            transition={{ duration: 0.7 }}
            className="text-5xl md:text-6xl font-extrabold mb-6 drop-shadow-lg"
          >
            ржмрж┐ржЬржирзЗрж╕ ржЯрзНрж░рзЗржЗржирж┐ржВ ржкрзНрж░рзЛржЧрзНрж░рж╛ржо
          </motion.h1>

          <motion.p
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 0.3, duration: 1 }}
            className="text-xl md:text-2xl mb-10 text-blue-100 max-w-3xl mx-auto leading-relaxed"
          >
            ржЖржкржирж╛рж░ ржЙржжрзНржпрзЛржХрзНрждрж╛ ржпрж╛рждрзНрж░рж╛ рж╢рзБрж░рзБ ржХрж░рзБржи ржмрж╛рж╕рзНрждржмржнрж┐рждрзНрждрж┐ржХ ржмрж┐ржЬржирзЗрж╕ ржЯрзНрж░рзЗржЗржирж┐ржВржпрж╝рзЗрж░
            ржорж╛ржзрзНржпржорзЗред
          </motion.p>

          <motion.div
            initial={{ scale: 0.9, opacity: 0 }}
            animate={{ scale: 1, opacity: 1 }}
            transition={{ delay: 0.5, duration: 0.6 }}
          >
            <Link
              to="/contact"
              className="bg-white text-indigo-700 px-10 py-3 rounded-full font-semibold text-lg shadow-md hover:bg-indigo-50 hover:shadow-lg transition-all duration-300"
            >
              ржПржЦржиржЗ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржХрж░рзБржи тЖТ
            </Link>
          </motion.div>
        </div>
      </div>

      {/* Stats Section */}
      <div className="py-20 bg-gradient-to-br from-indigo-50 via-purple-50 to-blue-50 relative overflow-hidden">
        <div className="absolute inset-0 bg-[radial-gradient(circle_at_top_right,_#dbeafe,_transparent_40%)]"></div>
        <div className="max-w-6xl mx-auto px-4 relative z-10">
          <div className="grid md:grid-cols-4 gap-8 text-center">
            {stats.map((stat, i) => (
              <motion.div
                key={i}
                initial={{ opacity: 0, y: 40 }}
                whileInView={{ opacity: 1, y: 0 }}
                whileHover={{ scale: 1.08, rotate: 1 }}
                transition={{ duration: 0.6, delay: i * 0.15, type: "spring" }}
                className="bg-white/80 backdrop-blur-lg border border-indigo-100 shadow-md rounded-2xl p-8 hover:shadow-xl transition-all duration-300"
              >
                <div className="text-5xl font-extrabold bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent mb-3">
                  {stat.number}
                </div>
                <div className="text-gray-700 font-medium text-lg tracking-wide">
                  {stat.label}
                </div>
                <div className="mt-3 w-12 h-1 mx-auto bg-gradient-to-r from-indigo-600 to-purple-500 rounded-full"></div>
              </motion.div>
            ))}
          </div>
        </div>
      </div>

      {/* Features */}
      <div className="py-16 bg-gradient-to-br from-indigo-50 to-blue-50">
        <div className="max-w-6xl mx-auto px-4">
          <h2 className="text-3xl font-bold text-center mb-12">
            ржХрзЛрж░рзНрж╕рзЗрж░ ржмрж┐рж╢рзЗрж╖ ржлрж┐ржЪрж╛рж░
          </h2>
          <div className="grid md:grid-cols-3 gap-8">
            {features.map((f, i) => (
              <motion.div
                key={i}
                whileHover={{ scale: 1.05 }}
                className="bg-white p-6 rounded-xl shadow-md hover:shadow-xl transition"
              >
                <div className="text-4xl mb-4">{f.icon}</div>
                <h3 className="text-xl font-bold mb-2">{f.title}</h3>
                <p className="text-gray-600">{f.description}</p>
              </motion.div>
            ))}
          </div>
        </div>
      </div>
      {/* Process */}
      <div className="py-16 bg-white">
        <div className="max-w-6xl mx-auto px-4 text-center">
          <h2 className="text-3xl font-bold mb-12">ржХрзАржнрж╛ржмрзЗ ржХрж╛ржЬ ржХрж░рзЗ?</h2>
          <div className="grid md:grid-cols-4 gap-8">
            {steps.map((s, i) => (
              <motion.div
                key={i}
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: i * 0.2 }}
                className="p-6"
              >
                <div className="w-16 h-16 mx-auto mb-4 bg-gradient-to-br from-indigo-600 to-blue-600 text-white rounded-full flex items-center justify-center text-2xl font-bold">
                  {s.step}
                </div>
                <h3 className="font-bold mb-2">{s.title}</h3>
                <p className="text-gray-600 text-sm">{s.desc}</p>
              </motion.div>
            ))}
          </div>
        </div>
      </div>
      {/* Packages */}
      <div className="py-16 bg-gradient-to-br from-indigo-50 to-blue-100">
        <div className="max-w-6xl mx-auto px-4">
          <h2 className="text-3xl font-bold text-center mb-4">
            ржЖржорж╛ржжрзЗрж░ ржЯрзНрж░рзЗржЗржирж┐ржВ ржкрзНржпрж╛ржХрзЗржЬ
          </h2>
          <p className="text-center text-gray-600 mb-12">
            ржЖржкржирж╛рж░ ржкрзНрж░ржпрж╝рзЛржЬржи ржЕржирзБржпрж╛ржпрж╝рзА ржкрзНржпрж╛ржХрзЗржЬ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржиред
          </p>
          <div className="grid md:grid-cols-3 gap-8 max-w-6xl mx-auto">
            {packages.map((pkg, i) => (
              <motion.div
                key={i}
                whileHover={{ y: -10 }}
                className={`rounded-lg p-8 transition-all ${
                  pkg.popular
                    ? "bg-gradient-to-br from-indigo-600 to-blue-600 text-white shadow-2xl scale-105"
                    : "bg-white shadow-md"
                }`}
              >
                {pkg.popular && (
                  <div className="bg-yellow-400 text-indigo-900 text-sm font-bold px-3 py-1 rounded-full inline-block mb-4">
                    ржЬржиржкрзНрж░рж┐ржпрж╝
                  </div>
                )}
                <h3 className="text-2xl font-bold mb-2">{pkg.name}</h3>
                <div className="mb-2">
                  <span className="text-4xl font-bold">рз│{pkg.price}</span>
                </div>
                <div
                  className={`mb-6 text-sm ${
                    pkg.popular ? "text-blue-100" : "text-gray-600"
                  }`}
                >
                  рж╕ржоржпрж╝ржХрж╛рж▓: {pkg.duration}
                </div>
                <ul className="space-y-3 mb-8">
                  {pkg.features.map((feature, idx) => (
                    <li key={idx} className="flex items-start">
                      <span className="mr-2">тЬУ</span>
                      <span>{feature}</span>
                    </li>
                  ))}
                </ul>
                <Link
                  to="/contact"
                  className={`block text-center py-3 rounded-lg font-semibold transition ${
                    pkg.popular
                      ? "bg-white text-indigo-600 hover:bg-gray-100"
                      : "bg-indigo-600 text-white hover:bg-indigo-700"
                  }`}
                >
                  ржПржЦржиржЗ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржХрж░рзБржи
                </Link>
              </motion.div>
            ))}
          </div>
        </div>
      </div>
      {/* CTA */}
      <div className="py-20 bg-gradient-to-r from-indigo-600 to-blue-600 text-white text-center">
        <h2 className="text-3xl font-bold mb-4">
          ржЖржкржирж╛рж░ ржмрзНржпржмрж╕рж╛рж░ ржкрж░ржмрж░рзНрждрзА ржзрж╛ржк ржПржЦрж╛ржи ржерзЗржХрзЗржЗ рж╢рзБрж░рзБ ржХрж░рзБржи!
        </h2>
        <p className="text-xl mb-8 text-blue-100">
          ржЕржнрж┐ржЬрзНржЮ ржорзЗржирзНржЯрж░рзЗрж░ рж╕рж╣рж╛ржпрж╝рждрж╛ржпрж╝ ржЖржЬржЗ ржирж┐ржЬрзЗрж░ ржмрзНржпржмрж╕рж╛ржХрзЗ ржЖрж░ржУ рж╢ржХрзНрждрж┐рж╢рж╛рж▓рзА ржХрж░рзБржиред
        </p>
        <Link
          to="/contact"
          className="bg-white text-indigo-600 px-8 py-3 rounded-lg font-semibold hover:bg-gray-100 transition"
        >
          ржлрзНрж░рж┐ ржкрж░рж╛ржорж░рзНрж╢ ржирж┐ржи тЖТ
        </Link>
      </div>
    </div>
  );
};

export default BusinessTraining;
